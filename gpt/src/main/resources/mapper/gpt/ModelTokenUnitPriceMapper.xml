<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.gpt.mapper.ModelTokenUnitPriceMapper">
    
    <resultMap type="ModelTokenUnitPrice" id="ModelTokenUnitPriceResult">
        <result property="id"    column="id"    />
        <result property="model"    column="model"    />
        <result property="unitModelTokenPrice"    column="unit_model_token_price"    />
        <result property="createTime"    column="create_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectModelTokenUnitPriceVo">
        select id, model, unit_model_token_price, create_time, create_by, update_time, update_by, remark from model_token_unit_price
    </sql>

    <select id="selectModelTokenUnitPriceList" parameterType="ModelTokenUnitPrice" resultMap="ModelTokenUnitPriceResult">
        <include refid="selectModelTokenUnitPriceVo"/>
        <where>  
            <if test="model != null  and model != ''"> and model = #{model}</if>
        </where>
    </select>
    
    <select id="selectModelTokenUnitPriceById" parameterType="Long" resultMap="ModelTokenUnitPriceResult">
        <include refid="selectModelTokenUnitPriceVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertModelTokenUnitPrice" parameterType="ModelTokenUnitPrice">
        insert into model_token_unit_price
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="model != null and model != ''">model,</if>
            <if test="unitModelTokenPrice != null">unit_model_token_price,</if>
            <if test="createTime != null">create_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="model != null and model != ''">#{model},</if>
            <if test="unitModelTokenPrice != null">#{unitModelTokenPrice},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateModelTokenUnitPrice" parameterType="ModelTokenUnitPrice">
        update model_token_unit_price
        <trim prefix="SET" suffixOverrides=",">
            <if test="model != null and model != ''">model = #{model},</if>
            <if test="unitModelTokenPrice != null">unit_model_token_price = #{unitModelTokenPrice},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteModelTokenUnitPriceById" parameterType="Long">
        delete from model_token_unit_price where id = #{id}
    </delete>

    <delete id="deleteModelTokenUnitPriceByIds" parameterType="String">
        delete from model_token_unit_price where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>