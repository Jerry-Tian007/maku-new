<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.gpt.mapper.UserModelParameterMapper">
    <resultMap type="com.ruoyi.gpt.model.vo.user_model_parameter.UserModelParameterPageVO"
               id="userModelParameterPageVOResult">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="promptId" column="prompt_id"/>
        <result property="promptSetting" column="prompt_setting"/>
        <result property="configureSetting" column="configure_setting"/>
        <result property="model" column="model"/>
    </resultMap>

    <resultMap type="com.ruoyi.gpt.model.vo.user_model_parameter.UserModelParameterInfoVO"
               id="userModelParameterInfoVOResult">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="promptId" column="prompt_id"/>
        <result property="promptSetting" column="prompt_setting"/>
        <result property="configureSetting" column="configure_setting"/>
        <result property="model" column="model"/>
    </resultMap>

    <select id="pageList"
            parameterType="com.ruoyi.gpt.model.dto.user_model_parameter.UserModelParameterInfoQryDto"
            resultMap="userModelParameterPageVOResult">
        select id,
               user_id,
               prompt_id,
               prompt_setting,
               configure_setting,
               model
        from user_model_parameter
    </select>

    <insert id="add" parameterType="UserModelParameterEntity">
        insert into user_model_parameter(
        <if test="id != null">id</if>,
        <if test="userId != null">user_id,</if>
        <if test="promptId != null">prompt_id,</if>
        <if test="promptSetting != null">prompt_setting,</if>
        <if test="configureSetting != null">configure_setting,</if>
        <if test="model != null">model,</if>
        <if test="remark != null">remark,</if>
        create_by,
        create_time)
        values (
        <if test="id != null">#{id}</if>,
        <if test="userId != null">#{userId},</if>
        <if test="promptId != null">#{promptId},</if>
        <if test="promptSetting != null">#{promptSetting},</if>
        <if test="configureSetting != null">#{configureSetting},</if>
        <if test="model != null">#{model},</if>
        <if test="remark != null">#{remark},</if>
        #{createBy},
        #{createTime})
    </insert>

    <update id="updateById" parameterType="UserModelParameterEntity">
        update user_model_parameter
        <set>
            <if test="id != null">id = #{id},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="promptId != null">prompt_id = #{promptId},</if>
            <if test="promptSetting != null">prompt_setting = #{promptSetting},</if>
            <if test="configureSetting != null">configure_setting = #{configureSetting},</if>
            <if test="model != null">model = #{model},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </set>
        where id = #{id}
    </update>
    <update id="updateByUserIdAndModel">
        update user_model_parameter
        <set>
            <if test="id != null">id = #{id},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="promptId != null">prompt_id = #{promptId},</if>
            <if test="promptSetting != null">prompt_setting = #{promptSetting},</if>
            <if test="configureSetting != null">configure_setting = #{configureSetting},</if>
            <if test="model != null">model = #{model},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </set>
        where
        user_id = #{userId}
        and model = #{model}
    </update>

    <delete id="deleteById" parameterType="long">
        delete
        from user_model_parameter
        where id = #{id}
    </delete>

    <select id="getById" parameterType="long" resultMap="userModelParameterInfoVOResult">
        select id,
               user_id,
               prompt_id,
               prompt_setting,
               configure_setting,
               model
        from user_model_parameter
        where id = #{id}
    </select>
    <select id="selectByUserIdAndModeName"
            resultType="com.ruoyi.gpt.model.vo.user_model_parameter.UserModelParameterPageVO">
        select id,
               user_id as userId,
               prompt_id as promptId,
               prompt_setting as promptSetting,
               configure_setting as configureSetting,
               model
        from user_model_parameter
        where user_id = #{userId}
          and model = #{modelName}
    </select>

</mapper>
